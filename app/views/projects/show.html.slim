= link_to t('back'), projects_path, class: 'btn btn-secondary mb-3'
.card
  .card-body
    h1.card-title.d-flex.justify-content-between.mb-4
      i.fas.fa-calendar-alt.grip.text-secondary
      span.text-primary
        = @project.name
      span
        = link_to edit_project_path(@project), class: 'btn' do
          i.fas.fa-pencil-alt.fa-2x
        | |
        = link_to @project, method: :delete, class: 'btn', data: { confirm: 'Are you sure?' } do
          i.fas.fa-trash-alt.fa-2x
    .mb-4
      = form_for([@task.project, @task]) do |f|
        = render 'errors', errors: @task.errors
        = f.hidden_field :status, value: 'not-started'
        .input-group
          i.fas.fa-plus.fa-2x.btn-info
          = f.text_field :name, class: 'form-control', placeholder: t('activerecord.models.task.attributes.name.placeholder')
          .input-group-append
            = f.submit class: 'btn btn-info'
    h4
      = t('activerecord.models.task.other')
    ul#task-list
      - @project.tasks.each do |task|
        - if task.persisted?
          li
            .card.mb-3
              .card-body
                .d-flex.justify-content-between
                  .task-status
                    i.fas.fa-grip-vertical.grip.text-secondary.mr-1
                    span.mb-3 class=("badge badge-#{task.color_class}")
                      = task.status
                  div
                    .dropdown.float-left
                      button#dropdownMenuButton aria-expanded="false" aria-haspopup="true" class=("btn btn-sm mr-1 btn-outline-#{task.color_class} dropdown-toggle") data-toggle="dropdown" type="button"
                        = task.readable_status
                      .dropdown-menu[aria-labelledby="dropdownMenuButton"]
                        - Task::STATUS_OPTIONS.each do |status|
                          a.dropdown-item[href="#"]
                            = status[0]
                    = link_to edit_project_task_path(task.project, task), class: 'btn btn-light btn-sm' do
                      i.far.fa-edit
                    = link_to [task.project, task], method: :delete, data: { confirm: t('confirm') }, class: 'btn btn-dark btn-sm' do
                      i.fas.fa-trash
                h5.card-title.mb-2
                  span
                    = task.name
                p
                  = task.description







                /
                /   div
                /     = link_to t('edit'), edit_project_task_path(task.project, task), class: 'btn btn-light btn-sm'
                /     = link_to t('delete'), [task.project, task], method: :delete, class: 'btn btn-dark btn-sm', data: { confirm: t('confirm') }
                / h5.card-title.mb-2
                /   span
                /     = task.name
                / p
                /   = task.description
